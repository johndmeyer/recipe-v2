/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, Optional, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Specifies the actions of each timeline card. To define an actions template, nest an `<ng-template>` tag
 * with the `kendoTimelineCardActionsTemplate` directive inside the `<kendo-timeline>` tag.
 *
 * The following values are available as context variables:
 * - `let-event="event"` (`TimelineEvent`) - The current card's event. Also available as implicit context variable.
 * - `let-index="index"` (`number`) - The current event index.
 */
export class TimelineCardActionsTemplateDirective {
    templateRef;
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TimelineCardActionsTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TimelineCardActionsTemplateDirective, isStandalone: true, selector: "[kendoTimelineCardActionsTemplate]", ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TimelineCardActionsTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[kendoTimelineCardActionsTemplate]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Optional
                }] }]; } });
