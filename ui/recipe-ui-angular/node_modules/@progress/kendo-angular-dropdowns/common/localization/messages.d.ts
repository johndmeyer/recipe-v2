/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ComponentMessages } from '@progress/kendo-angular-l10n';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class Messages extends ComponentMessages {
    /**
     * The text displayed in the popup when there are no items.
     */
    noDataText: string;
    /**
     * The title of the clear button.
     */
    clearTitle: string;
    /**
     * The text displayed for the check-all checkbox.
     */
    checkAllText: string;
    /**
     * The text set as aria-label on the select button.
     */
    selectButtonText: string;
    /**
     * The text set as aria-label on the list filter input.
     */
    filterInputLabel: string;
    /**
     * The text set as aria-label on the popup containing the list of options when its role is `region`.
     */
    popupLabel: string;
    /**
     * The text of the Apply button in the MultiSelect action sheet.
     */
    applyButton: string;
    /**
     * The text of the Cancel button in the MultiSelect action sheet.
     */
    cancelButton: string;
    static ɵfac: i0.ɵɵFactoryDeclaration<Messages, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<Messages, never, never, { "noDataText": { "alias": "noDataText"; "required": false; }; "clearTitle": { "alias": "clearTitle"; "required": false; }; "checkAllText": { "alias": "checkAllText"; "required": false; }; "selectButtonText": { "alias": "selectButtonText"; "required": false; }; "filterInputLabel": { "alias": "filterInputLabel"; "required": false; }; "popupLabel": { "alias": "popupLabel"; "required": false; }; "applyButton": { "alias": "applyButton"; "required": false; }; "cancelButton": { "alias": "cancelButton"; "required": false; }; }, {}, never, never, false, never>;
}
