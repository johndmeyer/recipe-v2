/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, Input } from '@angular/core';
import { ComponentMessages } from '@progress/kendo-angular-l10n';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export class Messages extends ComponentMessages {
    /**
     * The text displayed in the popup when there are no items.
     */
    noDataText;
    /**
     * The title of the clear button.
     */
    clearTitle;
    /**
     * The text displayed for the check-all checkbox.
     */
    checkAllText;
    /**
     * The text set as aria-label on the select button.
     */
    selectButtonText;
    /**
     * The text set as aria-label on the list filter input.
     */
    filterInputLabel;
    /**
     * The text set as aria-label on the popup containing the list of options when its role is `region`.
     */
    popupLabel;
    /**
     * The text of the Apply button in the MultiSelect action sheet.
     */
    applyButton;
    /**
     * The text of the Cancel button in the MultiSelect action sheet.
     */
    cancelButton;
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Messages, deps: null, target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: Messages, inputs: { noDataText: "noDataText", clearTitle: "clearTitle", checkAllText: "checkAllText", selectButtonText: "selectButtonText", filterInputLabel: "filterInputLabel", popupLabel: "popupLabel", applyButton: "applyButton", cancelButton: "cancelButton" }, usesInheritance: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Messages, decorators: [{
            type: Directive
        }], propDecorators: { noDataText: [{
                type: Input
            }], clearTitle: [{
                type: Input
            }], checkAllText: [{
                type: Input
            }], selectButtonText: [{
                type: Input
            }], filterInputLabel: [{
                type: Input
            }], popupLabel: [{
                type: Input
            }], applyButton: [{
                type: Input
            }], cancelButton: [{
                type: Input
            }] } });
