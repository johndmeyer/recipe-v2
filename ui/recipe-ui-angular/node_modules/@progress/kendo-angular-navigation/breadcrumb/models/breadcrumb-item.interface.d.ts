/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { SVGIcon } from "@progress/kendo-svg-icons";
/**
 * @hidden
 */
interface BreadCrumbItemContext {
    collapsed: boolean;
    isLast: boolean;
    isFirst: boolean;
}
/**
 * @hidden
 */
export interface BreadCrumbItemModel {
    context: BreadCrumbItemContext;
    data: BreadCrumbItem;
}
/**
 * An interface for the Breadcrumb items.
 */
export interface BreadCrumbItem {
    /**
     * Specifies the text content rendered inside the item. The numeric item index is rendered by default.
     */
    text?: string;
    /**
     * Sets the title of the item ([see example]({% slug overview_breadcrumb %})). Rendered as a `title` attribute on the item.
     */
    title?: string;
    /**
     * Specifies if the item is disabled ([see example]({% slug item_appearance_breadcrumb %})#toc-disabled-items). Rendered as an `aria-disabled` attribute on the item.
     */
    disabled?: boolean;
    /**
     * Defines the name for a [built-in icon]({% slug icons %}) in a Kendo UI theme ([see example](slug:item_appearance_breadcrumb#toc-displaying-font-icons)).
     * The icon is rendered inside the item by a `span.k-icon element`.
     */
    icon?: string;
    /**
     * Defines an [`SVGIcon`](slug:api_icons_svgicon) to be rendered within the BreadCrumb item ([see example](slug:item_appearance_breadcrumb#toc-displaying-svg-icons)).
     */
    svgIcon?: SVGIcon;
    /**
     * Defines a CSS class—or multiple classes separated by spaces— which are applied to a `span` element inside the item ([see example](slug:item_appearance_breadcrumb#toc-displaying-font-icons)).
     * Allows the usage of custom icons.
     */
    iconClass?: string;
    /**
     * Defines a URL which is used for an `img` element inside the item ([see example](slug:item_appearance_breadcrumb#toc-displaying-item-images)).
     * The URL can be relative or absolute. If relative, it is evaluated with relation to the web page URL.
     */
    imageUrl?: string;
}
export {};
