/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { AppBarPosition } from './models/position';
import { AppBarThemeColor } from './models/theme-color';
import { AppBarPositionMode } from './models/position-mode';
import * as i0 from "@angular/core";
/**
 * Represents the [Kendo UI AppBar component for Angular]({% slug overview_appbar %}).
 * Used to display information, actions, branding titles and additional navigation on the current screen.
 */
export declare class AppBarComponent implements AfterViewInit, OnDestroy {
    private localizationService;
    private host;
    private renderer;
    hostClass: boolean;
    /**
     * @hidden
     */
    direction: string;
    /**
     * Specifies the position of the AppBar
     * ([see example]({% slug positioning_appbar %}#toc-position)).
     *
     * * The possible values are:
     * * `top` (Default)&mdash;Positions the AppBar at the top of the content.
     *    Setting the `position` property to `top` requires adding the Appbar component before the page content.
     *    The position property applies CSS `top: 0` style in [`fixed mode`](slug:api_navigation_appbarcomponent#toc-positionmode) and also adds a `box-shadow` to the bottom of the AppBar.
     *
     * * `bottom`&mdash;Positions the AppBar at the bottom of the content.
     *    Setting the `position` property to `bottom` requires adding the Appbar component after the page content.
     *   The position property applies CSS `bottom: 0` style in [`fixed mode`](slug:api_navigation_appbarcomponent#toc-positionmode) and also adds a `box-shadow ` to the top of the AppBar.
     *
     */
    set position(position: AppBarPosition);
    get position(): AppBarPosition;
    /**
     * Specifies the positionMode of the AppBar
     * ([see example](slug:positioning_appbar#toc-position-mode)).
     *
     * * The possible values are:
     * * `static` (Default)&mdash;Does not position the AppBar in any special way. It is positioned according to the normal flow of the page.
     * * `sticky`&mdash;Positions the AppBar based on the user's scroll position. A sticky element toggles between static and fixed CSS [`position`](https://developer.mozilla.org/en-US/docs/Web/CSS/position) property, depending on the scroll position.
     * * `fixed`&mdash;Positions the AppBar relative to the viewport. It always stays in the same place even if the page is scrolled.
     */
    set positionMode(positionMode: AppBarPositionMode);
    get positionMode(): AppBarPositionMode;
    /**
     * Specifies the theme color of the AppBar.
     * The theme color will be applied as background color of the component.
     *
     *
     * * The possible values are:
     * * `light` (Default)&mdash;Applies coloring based on light theme color.
     * * `dark`&mdash;Applies coloring based on dark theme color.
     * * `inherit`&mdash; Applies inherited coloring value.
     * * `primary`&mdash; Applies primary coloring value.
     *
     */
    set themeColor(themeColor: AppBarThemeColor);
    get themeColor(): AppBarThemeColor;
    private dynamicRTLSubscription;
    private rtl;
    private _themeColor;
    private _position;
    private _positionMode;
    constructor(localizationService: LocalizationService, host: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private handleHostClasses;
    static ɵfac: i0.ɵɵFactoryDeclaration<AppBarComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AppBarComponent, "kendo-appbar", ["kendoAppBar"], { "position": { "alias": "position"; "required": false; }; "positionMode": { "alias": "positionMode"; "required": false; }; "themeColor": { "alias": "themeColor"; "required": false; }; }, {}, never, ["*"], true, never>;
}
