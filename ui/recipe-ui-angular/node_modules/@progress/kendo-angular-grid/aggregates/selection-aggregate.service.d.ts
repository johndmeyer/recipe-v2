/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { SelectionAggregate, SelectionAggregates } from './aggregate-types';
import { CellSelectionItem, SelectionEvent } from '../selection/types';
import { RowArgs } from '../rendering/common/row-args';
import { ContextService } from '../common/provider.service';
import { ColumnInfoService } from '../common/column-info.service';
import { LocalDataChangesService } from '../editing/local-data-changes.service';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
interface GroupedAggregates {
    dates?: Array<any>;
    numbers?: Array<number>;
    booleans?: Array<boolean>;
}
/**
 * @hidden
 */
export declare class CellSelectionAggregateService {
    private ctx;
    private dataChanges;
    private columnInfoService;
    selectedItems: Array<CellSelectionItem | RowArgs>;
    groupedAggregates: GroupedAggregates;
    aggregates: SelectionAggregates;
    private sub;
    constructor(ctx: ContextService, dataChanges: LocalDataChangesService, columnInfoService: ColumnInfoService);
    ngOnDestroy(): void;
    isAggregateIncluded(aggregate: SelectionAggregate): boolean;
    init(): void;
    onSelectionChange(selectionArgs: SelectionEvent): SelectionAggregates;
    get isRowSelection(): boolean;
    private handleAggregateChanges;
    private groupAggregates;
    private calculateAggregates;
    private handleSelectedItems;
    private nullifyAggregates;
    static ɵfac: i0.ɵɵFactoryDeclaration<CellSelectionAggregateService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CellSelectionAggregateService>;
}
export {};
