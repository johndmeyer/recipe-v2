/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Represents the filter-menu template.
 * Helps to customize the content of the filter menu. To define the filter menu template, nest an `<ng-template>` tag with the
 * `kendoGridFilterMenuTemplate` directive inside a `<kendo-grid-column>` tag
 * ([see example]({% slug filter_menu %}#toc-custom-filters)).
 *
 * The template context is set to the current data item and the following additional fields are passed:
 * - `column`&mdash;Defines an instance of the [`ColumnComponent`]({% slug api_grid_columncomponent %}) option. Use it as an alias for a template variable by utilizing the `let-column="column"` syntax.
 * - `filter`&mdash;The provided filter descriptors. Use it as an alias for a template variable by utilizing the `let-filter="filter"` syntax.
 * - `filterService`&mdash;Represents the [`FilterService`]({% slug api_grid_filterservice %}). Use it as an alias for a template variable by utilizing the `let-filterService="filterService"` syntax.
 *
 * ```html
 * <kendo-grid-column field="CategoryID" title="Category">
 *     <ng-template kendoGridFilterMenuTemplate
 *         let-column="column"
 *         let-filter="filter"
 *         let-filterService="filterService"
 *         >
 *         ...
 *    </ng-template>
 * </kendo-grid-column>
 * ```
 */
export declare class FilterMenuTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<FilterMenuTemplateDirective, [{ optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<FilterMenuTemplateDirective, "[kendoGridFilterMenuTemplate]", never, {}, {}, never, never, true, never>;
}
