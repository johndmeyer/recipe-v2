/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnInit, OnDestroy } from '@angular/core';
import { DropDownListComponent } from '@progress/kendo-angular-dropdowns';
import { GridSize } from '../../common/size-options';
import { SizingOptionsService } from '../../layout/sizing-options.service';
import { SVGIcon } from '@progress/kendo-svg-icons';
import { ContextService } from '../../common/provider.service';
import { ColumnComponent } from '../../columns/column.component';
import * as i0 from "@angular/core";
/**
 * Represents a component which accommodates the filter operators.
 *
 * @example
 * ```html
 * <kendo-grid [data]="gridData">
 *   <kendo-grid-column field="ProductName">
 *     <ng-template kendoGridFilterCellTemplate let-filter let-column="column">
 *       <input />
 *       <kendo-grid-filter-cell-operators
 *         [operators]="[{text: 'Equals', value: 'eq'}]">
 *       </kendo-grid-filter-cell-operators>
 *     </ng-template>
 *   </kendo-grid-column>
 * <kendo-grid>
 * ```
 */
export declare class FilterCellOperatorsComponent implements OnInit, OnDestroy {
    protected ctx: ContextService;
    protected sizing: SizingOptionsService;
    clearText: string;
    filterClearIcon: SVGIcon;
    /**
     * @hidden
     */
    filterSVGIcon: SVGIcon;
    /**
     * @hidden
     */
    size: GridSize;
    /**
     * @hidden
     */
    get hostClasses(): boolean;
    /**
     * @hidden
     */
    dropdown: DropDownListComponent;
    /**
     * The filter operators that will be displayed.
     */
    operators: Array<{
        text: string;
        value: string;
    }>;
    /**
     * Determines if the **Clear** button will be displayed.
     * @type {boolean}
     */
    showButton: boolean;
    /**
     * Determines if the list of operators will be displayed.
     * @type {boolean}
     * @default true
     */
    showOperators: boolean;
    /**
     * The selected operator.
     * @type {string}
     */
    value: string;
    /**
     * The Grid column which the filter operators are associated with.
     */
    column: ColumnComponent;
    /**
     * Fires when the operator is selected.
     * @type {EventEmitter<string>}
     */
    valueChange: EventEmitter<string>;
    /**
     * Fires when the **Clear** button is clicked.
     * @type {EventEmitter<undefined>}
     */
    clear: EventEmitter<undefined>;
    private subs;
    constructor(ctx: ContextService, sizing: SizingOptionsService);
    /**
     * @hidden
     */
    onChange(dataItem: any): void;
    /**
     * @hidden
     */
    clearClick(): boolean;
    /**
     * @hidden
     */
    clearKeydown(args: KeyboardEvent): void;
    /**
     * @hidden
     */
    dropdownKeydown(args: KeyboardEvent): void;
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    get columnLabel(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<FilterCellOperatorsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<FilterCellOperatorsComponent, "kendo-grid-filter-cell-operators", never, { "operators": { "alias": "operators"; "required": false; }; "showButton": { "alias": "showButton"; "required": false; }; "showOperators": { "alias": "showOperators"; "required": false; }; "value": { "alias": "value"; "required": false; }; "column": { "alias": "column"; "required": false; }; }, { "valueChange": "valueChange"; "clear": "clear"; }, never, never, true, never>;
}
