/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnDestroy, QueryList, DoCheck, ChangeDetectorRef, NgZone, Renderer2 } from '@angular/core';
import { GroupDescriptor } from '@progress/kendo-data-query';
import { GroupInfoService } from './group-info.service';
import { DropTargetDirective } from '../dragdrop/drop-target.directive';
import { DragHintService } from '../dragdrop/drag-hint.service';
import { DropCueService } from '../dragdrop/drop-cue.service';
import { DragAndDropContext } from '../dragdrop/context-types';
import { SVGIcon } from '@progress/kendo-svg-icons';
import { ContextService } from '../common/provider.service';
import { PopupService } from '@progress/kendo-angular-popup';
import { ChipComponent } from '@progress/kendo-angular-buttons';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class GroupPanelComponent implements OnDestroy, DoCheck {
    private hint;
    private cue;
    groupInfoService: GroupInfoService;
    private ctx;
    private cd;
    private popupService;
    private ngZone;
    private renderer;
    change: EventEmitter<GroupDescriptor[]>;
    get groupHeaderClass(): boolean;
    set text(value: string);
    get text(): string;
    navigable: boolean;
    groups: GroupDescriptor[];
    dropTargets: QueryList<DropTargetDirective>;
    private defaultTemplate;
    groupTitles: string[];
    isChipMenuOpen: boolean;
    get gridId(): string;
    rtl: boolean;
    first: boolean;
    last: boolean;
    arrowLeftIcon: SVGIcon;
    arrowRightIcon: SVGIcon;
    private emptyText;
    private subscription;
    private targetSubscription;
    private popupSubs;
    private popupRef;
    private activeItem;
    constructor(hint: DragHintService, cue: DropCueService, groupInfoService: GroupInfoService, ctx: ContextService, cd: ChangeDetectorRef, popupService: PopupService, ngZone: NgZone, renderer: Renderer2);
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    messageFor(token: string): string;
    getTitle(group: GroupDescriptor): string;
    getDirectionIcon(group: GroupDescriptor): string;
    getDirectionSvgIcon(group: GroupDescriptor): SVGIcon;
    directionChange(group: GroupDescriptor): void;
    insert(field: string, index: number): void;
    remove(group: GroupDescriptor): void;
    toggleMenu(chip: ChipComponent, first: boolean, last: boolean, field: string): void;
    handleKeyDown: (e: any) => void;
    handleClick: (e: any) => void;
    canDrop(draggable: DragAndDropContext, target: DragAndDropContext): boolean;
    private attachTargets;
    private enter;
    private leave;
    private drop;
    private destroyMenu;
    private activateMenuItem;
    private handleMenuClick;
    static ɵfac: i0.ɵɵFactoryDeclaration<GroupPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<GroupPanelComponent, "kendo-grid-group-panel", never, { "text": { "alias": "text"; "required": false; }; "navigable": { "alias": "navigable"; "required": false; }; "groups": { "alias": "groups"; "required": false; }; }, { "change": "change"; }, never, never, true, never>;
}
