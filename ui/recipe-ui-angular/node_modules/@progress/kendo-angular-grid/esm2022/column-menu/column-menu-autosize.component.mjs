/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, Input, isDevMode } from '@angular/core';
import { maxWidthIcon } from '@progress/kendo-svg-icons';
import { ColumnMenuErrorMessages } from '../common/error-messages';
import { ContextService } from '../common/provider.service';
import { ColumnMenuItemBase } from './column-menu-item-base';
import { autoSizeColumn } from './utils';
import { ColumnMenuItemComponent } from './column-menu-item.component';
import { NgIf } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../common/provider.service";
/**
 * Represents the column-menu item for resizing the specified column to the minimum possible width so that it fits the header or cell content without wrapping.
 * [See example](slug:columnmenu_grid#toc-autosize-column-item).
 * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.
 * [See example](slug:columnmenu_grid#toc-customizing-the-content).
 *
 * You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) and `column` that are passed by
 * the template to the `service` and `column` input of the `kendo-grid-columnmenu-autosize-column` component.
 *
 * @example
 * ```html
 * <kendo-grid [columnMenu]="true" ...>
 *   <ng-template kendoGridColumnMenuTemplate let-service="service" let-column="column">
 *     <kendo-grid-columnmenu-autosize-column [column]="column" [service]="service">
 *     </kendo-grid-columnmenu-autosize-column>
 *   </ng-template>
 * </kendo-grid>
 * ```
 */
export class ColumnMenuAutoSizeColumnComponent extends ColumnMenuItemBase {
    ctx;
    /**
     * The Grid column instance which will be resized through the auto size column option.
     */
    column;
    maxWidthIcon = maxWidthIcon;
    constructor(ctx) {
        super();
        this.ctx = ctx;
    }
    ngOnInit() {
        const isVirtualColumns = this.ctx.grid.columnMenuTemplate && this.ctx.grid.virtualColumns;
        if (isVirtualColumns && isDevMode()) {
            console.warn(ColumnMenuErrorMessages.autoSizeColumn);
        }
    }
    /**
     * Resizes a specified column to the minimum possible width so that it fits the widest header or cell content without wrapping.
     */
    autoSizeColumn() {
        autoSizeColumn(this.ctx.grid, this.service, this.column);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnMenuAutoSizeColumnComponent, deps: [{ token: i1.ContextService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ColumnMenuAutoSizeColumnComponent, isStandalone: true, selector: "kendo-grid-columnmenu-autosize-column", inputs: { column: "column" }, usesInheritance: true, ngImport: i0, template: `
        <kendo-grid-columnmenu-item
            *ngIf="!this.ctx.grid.virtualColumns"
            class="k-grid-columnmenu-autosize-column"
            [text]="ctx.localization.get('autosizeThisColumn')"
            icon="max-width"
            [svgIcon]="maxWidthIcon"
            (itemClick)="autoSizeColumn()"
        ></kendo-grid-columnmenu-item>
    `, isInline: true, dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: ColumnMenuItemComponent, selector: "kendo-grid-columnmenu-item", inputs: ["icon", "svgIcon", "text", "selected", "disabled", "expanded", "service"], outputs: ["itemClick", "expand", "collapse"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnMenuAutoSizeColumnComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'kendo-grid-columnmenu-autosize-column',
                    template: `
        <kendo-grid-columnmenu-item
            *ngIf="!this.ctx.grid.virtualColumns"
            class="k-grid-columnmenu-autosize-column"
            [text]="ctx.localization.get('autosizeThisColumn')"
            icon="max-width"
            [svgIcon]="maxWidthIcon"
            (itemClick)="autoSizeColumn()"
        ></kendo-grid-columnmenu-item>
    `,
                    standalone: true,
                    imports: [NgIf, ColumnMenuItemComponent]
                }]
        }], ctorParameters: function () { return [{ type: i1.ContextService }]; }, propDecorators: { column: [{
                type: Input
            }] } });
