/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, isDevMode } from '@angular/core';
import { displayInlineFlexIcon } from '@progress/kendo-svg-icons';
import { ColumnMenuErrorMessages } from '../common/error-messages';
import { ContextService } from '../common/provider.service';
import { ColumnMenuItemBase } from './column-menu-item-base';
import { autoSizeColumn } from './utils';
import { ColumnMenuItemComponent } from './column-menu-item.component';
import { NgIf } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../common/provider.service";
/**
 * Represents the column-menu item for resizing all columns to the minimum possible width so that they fit the widest header or cell content without wrapping.
 * [See example](slug:columnmenu_grid#toc-autosize-all-columns-item).
 *
 * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.
 * To register the component as a known column menu item, set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by
 * the template to the `service` input of the `kendo-grid-columnmenu-autosize-all-columns` component. [See example](slug:columnmenu_grid#toc-customizing-the-content).
 *
 * @example
 * ```html
 * <kendo-grid [columnMenu]="true" ...>
 *   <ng-template kendoGridColumnMenuTemplate let-service="service">
 *     <kendo-grid-columnmenu-autosize-all-columns [service]="service">
 *     </kendo-grid-columnmenu-autosize-all-columns>
 *   </ng-template>
 * </kendo-grid>
 * ```
 */
export class ColumnMenuAutoSizeAllColumnsComponent extends ColumnMenuItemBase {
    ctx;
    displayInlineFlexIcon = displayInlineFlexIcon;
    constructor(ctx) {
        super();
        this.ctx = ctx;
    }
    ngOnInit() {
        const isVirtualColumns = this.ctx.grid.columnMenuTemplate && this.ctx.grid.virtualColumns;
        if (isVirtualColumns && isDevMode()) {
            console.warn(ColumnMenuErrorMessages.autoSizeAllColumns);
        }
    }
    /**
     * Resizes all columns to the minimum possible width so that they fit the widest header or cell content without wrapping.
     */
    autoSizeAllColumns() {
        autoSizeColumn(this.ctx.grid, this.service);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnMenuAutoSizeAllColumnsComponent, deps: [{ token: i1.ContextService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ColumnMenuAutoSizeAllColumnsComponent, isStandalone: true, selector: "kendo-grid-columnmenu-autosize-all-columns", usesInheritance: true, ngImport: i0, template: `
        <kendo-grid-columnmenu-item
            *ngIf="!this.ctx.grid.virtualColumns"
            [text]="ctx.localization.get('autosizeAllColumns')"
            icon="display-inline-flex"
            [svgIcon]="displayInlineFlexIcon"
            (itemClick)="autoSizeAllColumns()"
        ></kendo-grid-columnmenu-item>
    `, isInline: true, dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: ColumnMenuItemComponent, selector: "kendo-grid-columnmenu-item", inputs: ["icon", "svgIcon", "text", "selected", "disabled", "expanded", "service"], outputs: ["itemClick", "expand", "collapse"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnMenuAutoSizeAllColumnsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'kendo-grid-columnmenu-autosize-all-columns',
                    template: `
        <kendo-grid-columnmenu-item
            *ngIf="!this.ctx.grid.virtualColumns"
            [text]="ctx.localization.get('autosizeAllColumns')"
            icon="display-inline-flex"
            [svgIcon]="displayInlineFlexIcon"
            (itemClick)="autoSizeAllColumns()"
        ></kendo-grid-columnmenu-item>
    `,
                    standalone: true,
                    imports: [NgIf, ColumnMenuItemComponent]
                }]
        }], ctorParameters: function () { return [{ type: i1.ContextService }]; } });
