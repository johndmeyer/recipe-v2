/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, ChangeDetectorRef } from '@angular/core';
import { stickIcon, unstickIcon } from '@progress/kendo-svg-icons';
import { ColumnInfoService } from '../common/column-info.service';
import { ContextService } from '../common/provider.service';
import { ColumnMenuItemBase } from './column-menu-item-base';
import { ColumnMenuItemComponent } from './column-menu-item.component';
import * as i0 from "@angular/core";
import * as i1 from "../common/provider.service";
import * as i2 from "../common/column-info.service";
/**
 * Represents the column-menu item that sticks or unsticks columns in the Grid.
 * [See example](slug:columnmenu_grid#toc-stick-and-unstick-items).
 *
 * The component can be placed inside a [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.
 * To register the component as a known column menu item, set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by
 * the template to the service input of the `kendo-grid-columnmenu-lock` component. [See example](slug:columnmenu_grid#toc-customizing-the-content).
 *
 * @example
 * ```html
 * <kendo-grid [data]="data" [columnMenu]="true">
 *   <ng-template kendoGridColumnMenuTemplate let-service="service">
 *      <kendo-grid-columnmenu-stick [service]="service">
 *      </kendo-grid-columnmenu-stick>
 *   </ng-template>
 * </kendo-grid>
 *
 * ```
 */
export class ColumnMenuStickComponent extends ColumnMenuItemBase {
    ctx;
    columnInfoService;
    changeDetector;
    stickIcon = stickIcon;
    unstickIcon = unstickIcon;
    constructor(ctx, columnInfoService, changeDetector) {
        super();
        this.ctx = ctx;
        this.columnInfoService = columnInfoService;
        this.changeDetector = changeDetector;
    }
    get text() {
        return this.ctx.localization.get(this.sticky ? 'unstick' : 'stick');
    }
    get icon() {
        return this.sticky ? 'unstick' : 'stick';
    }
    get svgIcon() {
        return this.sticky ? this.unstickIcon : this.stickIcon;
    }
    get disabled() {
        return !this.sticky && this.columnInfoService.unlockedRootCount < 2;
    }
    /**
     * @hidden
     */
    toggleColumn() {
        this.toggleHierarchy(!this.sticky);
        this.close();
        this.changeDetector.markForCheck();
    }
    toggleHierarchy(sticky) {
        let root = this.service.column;
        while (root.parent) {
            root = root.parent;
        }
        const columns = [root];
        const allChanged = [];
        while (columns.length) {
            const column = columns.shift();
            column.sticky = sticky;
            allChanged.push(column);
            if (column.hasChildren) {
                columns.push(...column.childrenArray);
            }
        }
        this.columnInfoService.changeStuck(allChanged);
    }
    get sticky() {
        return this.service.column.sticky;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnMenuStickComponent, deps: [{ token: i1.ContextService }, { token: i2.ColumnInfoService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ColumnMenuStickComponent, isStandalone: true, selector: "kendo-grid-columnmenu-stick", usesInheritance: true, ngImport: i0, template: `
        <kendo-grid-columnmenu-item
           [text]="text"
           [icon]="icon"
           [svgIcon]="svgIcon"
           (itemClick)="toggleColumn()"
           [disabled]="disabled">
        </kendo-grid-columnmenu-item>
    `, isInline: true, dependencies: [{ kind: "component", type: ColumnMenuItemComponent, selector: "kendo-grid-columnmenu-item", inputs: ["icon", "svgIcon", "text", "selected", "disabled", "expanded", "service"], outputs: ["itemClick", "expand", "collapse"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnMenuStickComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'kendo-grid-columnmenu-stick',
                    template: `
        <kendo-grid-columnmenu-item
           [text]="text"
           [icon]="icon"
           [svgIcon]="svgIcon"
           (itemClick)="toggleColumn()"
           [disabled]="disabled">
        </kendo-grid-columnmenu-item>
    `,
                    standalone: true,
                    imports: [ColumnMenuItemComponent]
                }]
        }], ctorParameters: function () { return [{ type: i1.ContextService }, { type: i2.ColumnInfoService }, { type: i0.ChangeDetectorRef }]; } });
