/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Injectable, Renderer2 } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { GridToolbarNavigationService } from '../rendering/toolbar/toolbar-navigation.service';
import * as i0 from "@angular/core";
import * as i1 from "@progress/kendo-angular-l10n";
/**
 * @hidden
 *
 * The Context service is used to provide common
 * services and DI tokens for a Grid instance.
 *
 * This keeps the constructor parameters stable
 * and a avoids dependency cycles between components.
 */
export class ContextService {
    renderer;
    localization;
    grid;
    topToolbarNavigation;
    bottomToolbarNavigation;
    navigable;
    groupBindingDirective;
    constructor(renderer, localization) {
        this.renderer = renderer;
        this.localization = localization;
        this.topToolbarNavigation = new GridToolbarNavigationService(this.renderer);
        this.bottomToolbarNavigation = new GridToolbarNavigationService(this.renderer);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ContextService, deps: [{ token: i0.Renderer2 }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ContextService });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ContextService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i1.LocalizationService }]; } });
