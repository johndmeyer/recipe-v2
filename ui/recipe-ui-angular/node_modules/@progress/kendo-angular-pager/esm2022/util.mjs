/**-----------------------------------------------------------------------------------------
* Copyright Â© 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
/**
 * @hidden
 */
export const DEFAULT_PAGE_SIZE_VALUES = [5, 10, 20];
/**
 * @hidden
 */
const focusableDirectiveSelector = '[kendoPagerFocusable]';
/**
 * @hidden
 */
export const getAllFocusableChildren = (parent) => {
    return parent.querySelectorAll(focusableDirectiveSelector);
};
/**
 * @hidden
 */
export const focusableSelector = [
    'a[href]:not([disabled]):not([aria-hidden="true"])',
    'area[href]:not([disabled]):not([aria-hidden="true"])',
    'input:not([disabled]):not([aria-hidden="true"])',
    'select:not([disabled]):not([aria-hidden="true"])',
    'textarea:not([disabled]):not([aria-hidden="true"])',
    'button:not([aria-hidden="true"])',
    'iframe:not([disabled])',
    'object:not([disabled])',
    'embed:not([disabled])',
    '*[tabindex]:not([disabled]):not([aria-hidden="true"])',
    '*[contenteditable]:not([disabled]):not([contenteditable="false"])'
].join(',');
/**
 * @hidden
 */
export const DEFAULT_SIZE = 'medium';
const SIZES = {
    small: 'sm',
    medium: 'md',
    large: 'lg'
};
/**
 * @hidden
 *
 * Returns the styling classes to be added and removed
 */
export const getStylingClasses = (componentType, stylingOption, previousValue, newValue) => {
    switch (stylingOption) {
        case 'size':
            return {
                toRemove: `k-${componentType}-${SIZES[previousValue]}`,
                toAdd: newValue !== 'none' ? `k-${componentType}-${SIZES[newValue]}` : ''
            };
        default:
            break;
    }
};
/**
 * @hidden
 */
export const replaceMessagePlaceholder = (message, name, value) => message.replace(new RegExp(`\{\\s*${name}\\s*\}`, 'g'), value);
