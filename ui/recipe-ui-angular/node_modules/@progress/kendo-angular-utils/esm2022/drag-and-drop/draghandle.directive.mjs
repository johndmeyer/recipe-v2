/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, ElementRef, HostBinding } from "@angular/core";
import * as i0 from "@angular/core";
/**
 * Represents the Kendo UI DragHandle directive for Angular.
 * It is used to specify a concrete element within a drag target as a handle for dragging, instead the drag target itself.
 */
export class DragHandleDirective {
    element;
    constructor(element) {
        this.element = element;
    }
    cursorStyle = 'move';
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DragHandleDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: DragHandleDirective, isStandalone: true, selector: "[kendoDragHandle]", host: { properties: { "style.cursor": "this.cursorStyle" } }, exportAs: ["kendoDragHandle"], ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DragHandleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[kendoDragHandle]',
                    exportAs: 'kendoDragHandle',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cursorStyle: [{
                type: HostBinding,
                args: ['style.cursor']
            }] } });
