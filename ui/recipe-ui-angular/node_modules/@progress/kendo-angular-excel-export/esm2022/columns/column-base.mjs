/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Input, ContentChildren, QueryList, Component } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export class ColumnBase {
    parent;
    /**
     * The title of the column.
     */
    title;
    /**
     * The width of the column in pixels.
     */
    width;
    /**
     * Toggles the locked (frozen) state of the column ([see example]({% slug columns_excel-export %}#toc-locked-state)).
     *
     * @default false
     */
    locked;
    /**
     * Sets the visibility of the column ([see example]({% slug columns_excel-export %}#toc-hidden-state)).
     *
     * @default false
     */
    hidden;
    /**
     * The options of the column header cell.
     */
    headerCellOptions;
    /**
     * @hidden
     */
    children;
    /**
     * @hidden
     */
    get level() {
        return this.parent ? this.parent.level + 1 : 0;
    }
    constructor(parent) {
        this.parent = parent;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnBase, deps: [{ token: ColumnBase }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ColumnBase, selector: "ng-component", inputs: { title: "title", width: "width", locked: "locked", hidden: "hidden", headerCellOptions: "headerCellOptions" }, queries: [{ propertyName: "children", predicate: ColumnBase }], ngImport: i0, template: '', isInline: true });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ColumnBase, decorators: [{
            type: Component,
            args: [{
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: ColumnBase }]; }, propDecorators: { title: [{
                type: Input
            }], width: [{
                type: Input
            }], locked: [{
                type: Input
            }], hidden: [{
                type: Input
            }], headerCellOptions: [{
                type: Input
            }], children: [{
                type: ContentChildren,
                args: [ColumnBase]
            }] } });
