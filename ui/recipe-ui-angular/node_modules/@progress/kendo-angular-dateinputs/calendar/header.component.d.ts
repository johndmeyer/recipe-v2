/**-----------------------------------------------------------------------------------------
* Copyright © 2024 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { IntlService } from '@progress/kendo-angular-intl';
import { CalendarView } from './models/view.type';
import { CalendarViewEnum } from './models/view.enum';
import { CalendarOrientation } from './models/orientation';
import { BusViewService } from './services/bus-view.service';
import { DisabledDatesService } from './services/disabled-dates.service';
import { SVGIcon } from '@progress/kendo-svg-icons';
import { DateInputSize } from '../common/models/size';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class HeaderComponent implements OnChanges, OnInit, OnDestroy {
    private bus;
    private cdr;
    localization: LocalizationService;
    private intl;
    private disabledDatesService;
    /**
     * @hidden
     */
    chevronRightIcon: SVGIcon;
    /**
     * @hidden
     */
    chevronLeftIcon: SVGIcon;
    navigate: boolean;
    todayAvailable: boolean;
    activeViewValue: CalendarView;
    todayMessage: string;
    title: string;
    prevButtonTitle: string;
    nextButtonTitle: string;
    parentViewButtonTitle: string;
    activeView: CalendarViewEnum;
    currentDate: Date;
    min: Date;
    max: Date;
    rangeLength: number;
    titleTemplateRef: TemplateRef<any>;
    headerTemplateRef: TemplateRef<any>;
    isPrevDisabled: boolean;
    isNextDisabled: boolean;
    showNavigationButtons: boolean;
    orientation: CalendarOrientation;
    id: string;
    size: DateInputSize;
    todayButtonClick: EventEmitter<Date>;
    prevButtonClick: EventEmitter<any>;
    nextButtonClick: EventEmitter<any>;
    getComponentClass: boolean;
    get verticalHostClass(): boolean;
    private subscriptions;
    constructor(bus: BusViewService, cdr: ChangeDetectorRef, localization: LocalizationService, intl: IntlService, disabledDatesService: DisabledDatesService);
    ngOnInit(): void;
    ngOnChanges(_: any): void;
    ngOnDestroy(): void;
    handleTodayClick(): void;
    handleNavigation(): void;
    isDisabled(): string;
    private intlChange;
    private l10nChange;
    private getTitle;
    private setTodayAvailability;
    static ɵfac: i0.ɵɵFactoryDeclaration<HeaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<HeaderComponent, "kendo-calendar-header", never, { "activeView": { "alias": "activeView"; "required": false; }; "currentDate": { "alias": "currentDate"; "required": false; }; "min": { "alias": "min"; "required": false; }; "max": { "alias": "max"; "required": false; }; "rangeLength": { "alias": "rangeLength"; "required": false; }; "titleTemplateRef": { "alias": "titleTemplateRef"; "required": false; }; "headerTemplateRef": { "alias": "headerTemplateRef"; "required": false; }; "isPrevDisabled": { "alias": "isPrevDisabled"; "required": false; }; "isNextDisabled": { "alias": "isNextDisabled"; "required": false; }; "showNavigationButtons": { "alias": "showNavigationButtons"; "required": false; }; "orientation": { "alias": "orientation"; "required": false; }; "id": { "alias": "id"; "required": false; }; "size": { "alias": "size"; "required": false; }; }, { "todayButtonClick": "todayButtonClick"; "prevButtonClick": "prevButtonClick"; "nextButtonClick": "nextButtonClick"; }, never, never, true, never>;
}
